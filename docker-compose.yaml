services:
  db:
    image: postgres:12.2-alpine
    container_name: "piko-blog-db"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - piko
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: "piko-blog-api"
    environment:
      DB_USERNAME: "postgres"
      DB_PASSWORD: "postgres"
      DB_DB: "postgres"
      DB_HOST: "db"
      DB_TABLE: "postgres"
      DB_PORT: "5432"
      SSL_MODE: "disable"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - piko

volumes:
  postgres_data:

networks:
  piko:
    driver: bridge